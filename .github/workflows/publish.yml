name: Publish
on:
  issues:
    types: [labeled]
jobs:
  publish:
    runs-on: ubuntu-latest
    name: Publish a new version
    if: github.event.label.name == 'accepted' && github.event.issue.state == 'open'
    env:
      SENTRY_DSN: "https://303a687befb64dc2b40ce4c96de507c5@o1.ingest.sentry.io/6183838"
    steps:
      - name: Get repo contents
        uses: actions/checkout@v2
        with:
          path: .__publish__

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: yarn
          cache-dependency-path: .__publish__/yarn.lock

      - name: Install Sentry SDK
        run: yarn add @sentry/node

      - name: Parse and set inputs
        id: inputs
        uses: actions/github-script@v5
        with:
          script: |
            const inputs = require(`${process.env.GITHUB_WORKSPACE}/.__publish__/src/publish/inputs.js`).default;
            return await inputs({context});

      - name: Inform start
        if: steps.inputs.outcome == 'success'
        uses: actions/github-script@v5
        env:
          PUBLISH_ARGS: ${{ steps.inputs.outputs.result }}
        with:
          script: |
            const start = require(`${process.env.GITHUB_WORKSPACE}/.__publish__/src/publish/start.js`).default;
            return await start({context, github});

      - uses: actions/checkout@v2
        name: Check out target repo
        if: ${{ steps.inputs.outputs.result }}
        with:
          path: __repo__
          repository: getsentry/${{ fromJSON(steps.inputs.outputs.result).repo }}
          token: ${{ secrets.GH_SENTRY_BOT_PAT }}
          fetch-depth: 0

      - name: Set targets
        shell: bash
        if: fromJSON(steps.inputs.outputs.result).targets
        run: >
          jq -n --argjson
          source '${{ toJSON(fromJSON(steps.inputs.outputs.result).targets) }}'
          '[{($source[]): true }] | add | {"published": (. // {}) }'
          > __repo__/.craft-publish-${{ fromJSON(steps.inputs.outputs.result).version }}.json

      - uses: docker://getsentry/craft:latest
        name: Publish using Craft
        with:
          entrypoint: /bin/bash
          args: >-
            -e
            -c "
            cd __repo__/${{ fromJSON(steps.inputs.outputs.result).path }};
            exec craft publish ${{ fromJSON(steps.inputs.outputs.result).version }};
            "
        env:
          CRAFT_LOG_LEVEL: ${{ secrets.CRAFT_LOG_LEVEL }}
          CRAFT_DRY_RUN: ${{ fromJSON(steps.inputs.outputs.result).dry_run }}
          GIT_COMMITTER_NAME: getsentry-bot
          GIT_AUTHOR_NAME: getsentry-bot
          EMAIL: bot@getsentry.com
          GITHUB_API_TOKEN: ${{ secrets.GH_SENTRY_BOT_PAT }}
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
          CRAFT_GCS_TARGET_CREDS_JSON: ${{ secrets.CRAFT_GCS_TARGET_CREDS_JSON }}
          CRAFT_GCS_STORE_CREDS_JSON: ${{ secrets.CRAFT_GCS_STORE_CREDS_JSON }}
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
          DOCKER_USERNAME: sentrybuilder
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GEM_HOST_API_KEY: ${{ secrets.GEM_HOST_API_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          NUGET_API_TOKEN: ${{ secrets.NUGET_API_TOKEN }}

      - name: Inform about failure
        if: ${{ failure() }}
        uses: actions/github-script@v5
        env:
          PUBLISH_ARGS: ${{ steps.inputs.outputs.result }}
        with:
          script: |
            const Sentry = require('@sentry/node');
            const inputs = JSON.parse(process.env.PUBLISH_ARGS);
            const fail = require(`${process.env.GITHUB_WORKSPACE}/.__publish__/src/publish/fail.js`).default;
            return await fail({context, github, inputs, Sentry});

      - name: Close on success
        if: ${{ success() }}
        uses: actions/github-script@v5
        env:
          PUBLISH_ARGS: ${{ steps.inputs.outputs.result }}
        with:
          script: |
            const Sentry = require('@sentry/node');
            const inputs = JSON.parse(process.env.PUBLISH_ARGS);
            const success = require(`${process.env.GITHUB_WORKSPACE}/.__publish__/src/publish/success.js`).default;
            return await success({context, github, inputs, Sentry});
