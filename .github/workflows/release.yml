name: publish
on:
  workflow_dispatch:
    inputs:
      repo:
        description: Repository to release
        required: true
      version:
        description: Version to release
        required: true
      dry_run:
        description: Do not actually cut the release
        required: false
        default: ''
  issues:
    types: [labeled]
jobs:
  release:
    runs-on: ubuntu-latest
    name: 'Publish a new version'
    steps:
      - name: 'Set inputs'
        id: inputs
        uses: actions/github-script@v3
        with:
          script: |
            if (context.eventName === 'workflow_dispatch') {
              return context.payload.inputs;
            }

            const {owner, repo} = context.repo;
            let dry_run = "";
            if (context.payload.label !== 'accepted') {
              dry_run = "1"; // set this just in case we cannot stop the workflow in time
              await github.actions.cancelWorkflowRun(owner, repo, context.runId);
            }
            const titleParser = /^deploy: (?<repo>[^\/@]+)@(?<version>[\w.]+)$/;
            const inputs = context.payload.issue.title.match(titleParser).groups();

            return {dry_run, ...inputs};
      - uses: actions/checkout@v2
        with:
          repository: getsentry/${{ fromJSON(steps.inputs.outputs.result).repo }}
          token: ${{ secrets.GH_SENTRY_BOT_PAT }}
      - uses: getsentry/craft@master
        with:
          action: publish
          version: ${{ fromJSON(steps.inputs.outputs.result).version }}
        env:
          DRY_RUN: ${{ fromJSON(steps.inputs.outputs.result).dry_run }}
          GIT_COMMITTER_NAME: getsentry-bot
          GIT_AUTHOR_NAME: getsentry-bot
          EMAIL: bot@getsentry.com
          GITHUB_API_TOKEN: ${{ secrets.GH_SENTRY_BOT_PAT }}
          # TODO(byk): Drop ZEUS_API_TOKEN when all repos use GitHub Artifacts
          ZEUS_API_TOKEN: ${{ secrets.ZEUS_API_TOKEN }}
          CRAFT_GCS_TARGET_CREDS_JSON: ${{ secrets.CRAFT_GCS_TARGET_CREDS_JSON }}
          DOCKER_USERNAME: 'sentrybuilder'
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          TWINE_USERNAME: '__token__'
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          # TODO(byk): Add other credentials like Cargo etc as needed
